/*---------- These styles are for the home page of the dashboard ----------*/
.grid-layout {
  display: grid;
  grid-template-columns: repeat(6, 1fr); /* this porperty allows us to determine how many grid 'columns' we want so that we can easily stylize the posts page so that it seems like a table without actually being a table */
  gap: 15px;
  overflow-x: auto; /* we used overflow auto so that when there's content exceeding the width, a scroll bar will appear in the horizontal axis */
}

.grid-layout > *, .field-names > *, .single-new-post > * { /* select all child elements of grid-layout, field-names, OR single-new-post */
  min-width: 100px;
}

.field-names {
  gap: 15px;
  overflow-x: auto;
}

.view-more-wrapper {
  width: fit-content;
  margin-top: 20px;
}

.view-post-wrapper {
  justify-self: flex-end; /* aligns the button to the right of the flexbox that it sits */
}

.view-more-wrapper a {
  border-radius: 10px;
  background-color: #1357bc;
  padding: 1em;
  width: 100%;
  height: 100%;
  color: #fff;
  transition: .3s;
}

.view-more-wrapper a:hover {
  background-color: #1d68da;
  width: fit-content;
}

.view-post {
  padding: .75em;
  transition: .3s;
  border-radius: 10px;
  color: #fff;
  background: #1357bc;
}

.view-post:hover {
  background: #1d68da;
}

.single-new-user {
  gap: 15px;
  overflow-x: auto;
}

.user-name, .user-surname, .user-email, .user-username {
  overflow-x: auto;
}

.single-new-user .profile-picture img {
  width: 60px;
  margin-left: 2em;
}

.single-new-post {
  display: grid; /* this property turns the box into a grid, it allows us to determine how many grid 'columns' we want so that we can easily stylize the posts page so that it seems like a table without actually being a table */
  grid-template-columns: repeat(7, 1fr); 
  /* ^^^  this property sets the grid columns, it is usually used like this, grid-template-columns: 1fr 1fr 1fr; this would split the box into three even columns,
              but in order to not make the code redundant, we can use the shorthand property, repeat(n, 1fr) which is the same as writing 1fr n times,
              so we can write grid-template-columns: repeat(7, 1fr); to make the box into a table with 7 columns */
  align-items: center; /* aling items vertically in the center */
  background-color: #eee;
  border-radius: inherit; /* the border radius is inherited from parent */
  padding: 1.5em 1em;
  gap: 15px;
  overflow-x: auto;
}

.single-post-names {
  display: grid;
  grid-template-columns: repeat(7, 1fr); /* this also sets the grid box into 7 even columns */
}

.single-post-names p:nth-child(6) { /* select the 6th p tag inside .single-post-names */
  margin-left: 10px;
}

.post-comments-number {
  margin-left: 10px;
}